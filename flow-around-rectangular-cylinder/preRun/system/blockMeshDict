/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2312                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.01;

vertices
(
    // pre-block
    (0      0       0.5) // 0
    (25     0       0.5) // 1
    (25     0      -0.5) // 2 
    (0      0      -0.5) // 3

    (0      25       0.5) // 4
    (25     25       0.5) // 5
    (25     25      -0.5) // 6 
    (0      25      -0.5) // 7
    


    // obstacle blocks
    (  50  0  0.5) // 8
    (  50  0 -0.5) // 9

    (35.5    10.5    0.5) // 10
    (39.5    10.5    0.5) // 11
    (39.5    10.5   -0.5) // 12
    (35.5    10.5   -0.5) // 13

    (35.5     14.5   0.5) // 14
    (35.5     14.5  -0.5) // 15

    (39.5     14.5   0.5) // 16
    (39.5     14.5  -0.5)

    (  50  25  0.5) // 18
    (  50  25 -0.5) // 19

    // // post-block
    (   100   0    0.5) // 20
    (   100   0   -0.5) // 21
    (   100   25   0.5) // 22
    (   100   25  -0.5) // 23
);

blocks
(
        // pre-block
    hex ( 0  1  2  3  4  5  6  7) ( 50 1 100) simpleGrading (1 1 1)

    // obstacle blocks
    hex ( 1  8  9  2 10 11 12 13) (     100 1 100) simpleGrading (1 1 1) // bottom
    hex ( 1 10 13  2  5 14 15  6) (     100 1 100) simpleGrading (1 1 1) // left
    hex (14 16 17 15  5 18 19  6) (     100 1 100) simpleGrading (1 1 1) // top
    hex (11  8  9 12 16 18 19 17) (     100 1 100) simpleGrading (1 1 1) // right

    // // post-block
    hex ( 8 20 21  9 18 22 23 19) (100 1 100) simpleGrading (1 1 1)


);

edges
(

);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            ( 0  4  7  3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (20 21 23 22)
        );
    }
    wall
    {
        type wall;
        faces
        (
            ( 4  5  6  7)
            ( 5 18 19  6)
            (18 22 23 19)

            ( 0  1  2  3)
            ( 1  8  9  2)
            ( 8 20 21  9)
        );
    }
    obstacle
    {
        type wall;
        faces
        (
            (10 11 12 13)
            (11 16 17 12)
            (14 16 17 15)
            (10 14 15 13)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            ( 0  1  5  4)
            ( 1 10 14  5)
            (14 16 18  5)
            (11  8 18 16)
            ( 1  8 11 10)
            ( 8 20 22 18)

            ( 3  7  6  2)
            ( 2  6 15 13)
            (15  6 19 17)
            (12 17 19  9)
            ( 2 13 12  9)
            ( 9 19 23 21)
        );
    }

);

    inlet
    {
        type patch;
        faces
        (
            ( 0  4  7  3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (20 21 23 22)
        );
    }
    wall
    {
        type wall;
        faces
        (
            ( 4  5  6  7)
            ( 5 18 19  6)
            (18 22 23 19)

            ( 0  1  2  3)
            ( 1  8  9  2)
            ( 8 20 21  9)
        );
    }
    obstacle
    {
        type wall;
        faces
        (
            (10 11 12 13)
            (11 16 17 12)
            (14 16 17 15)
            (10 14 15 13)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            ( 0  1  5  4)
            ( 1 10 14  5)
            (14 16 18  5)
            (11  8 18 16)
            ( 1  8 11 10)
            ( 8 20 22 18)

            ( 3  7  6  2)
            ( 2  6 15 13)
            (15  6 19 17)
            (12 17 19  9)
            ( 2 13 12  9)
            ( 9 19 23 21)
        );
    }


// ************************************************************************* //
